name: HDF5 develop 

on:
  pull_request:

  # Allows to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  h5bench:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v2

      - name: Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install cmake
          sudo apt install gcc
          sudo apt-get install libtool
          sudo apt-get install zlib1g-dev
          sudo apt-get install python3
          sudo apt-get install libopenmpi-dev
          sudo apt-get install libhdf5-mpi-dev
          
          # hdf5
          git clone https://github.com/HDFGroup/hdf5.git

          # vol-async
          git clone --recursive https://github.com/hpc-io/vol-async.git
          
      - name: Install VOL-Async
        run: |
          mydir="$PWD"
          export HDF5_DIR=$mydir/hdf5/install
          export ABT_DIR=$mydir/vol-async/argobots
          export VOL_DIR=$mydir/vol-async
          
          mkdir $HDF5_DIR
          # Compile HDF5
          cd hdf5
          export HDF5_LIBTOOL=/usr/bin/libtoolize
          ./autogen.sh
          ./configure --prefix=$HDF5_DIR --enable-parallel --enable-threadsafe --enable-unsupported
          make -j 8 && make install
          
          # Compile Argobots
          cd $ABT_DIR
          ./autogen.sh
          ./configure --prefix=$ABT_DIR
          make && make install
          
          # Compile Asynchronous VOL connector
          cd $VOL_DIR
          cd src
          tail -n 48 Makefile.summit > Makefile
          make
          
      - name: Compile and Test VOL-Async
        run: |
          # Compile vol-async tests
          mydir="$PWD"
          cd $mydir/vol-async/test
          
          # Set Environmental Variables
          export H5_DIR=$mydir/hdf5
          export VOL_DIR=$mydir/vol-async
          export ABT_DIR=$mydir/vol-async/argobots
          export ASYNC_DIR=$mydir/vol-async/src
          export HDF5_DIR=$mydir/hdf5/install
          export LD_LIBRARY_PATH=$VOL_DIR/src:$H5_DIR/install/lib:$ABT_DIR/lib:$LD_LIBRARY_PATH
          export HDF5_PLUGIN_PATH="$VOL_DIR/src"
          export HDF5_VOL_CONNECTOR="async under_vol=0;under_info={}"
          
          # Makefile
          tail -n 47 Makefile.summit > Makefile
          export LD_PRELOAD=$ABT_DIR/lib/libabt.so
          make
          
          # Run serial and parallel tests
          make check
          # Run serial tests only
          make check_serial
          
      - name: Build h5bench SYNC
        run: |
          mkdir build_sync
          cd build_sync
          cmake .. -DCMAKE_C_COMPILER=/usr/bin/h5pcc
          make

      - name: Build h5bench ASYNC
        run: |
          mydir="$PWD"
          mkdir build_async
          cd build_async
          cmake .. -DWITH_ASYNC_VOL:BOOL=ON -DCMAKE_C_FLAGS="-I/$mydir/vol-async/src -L/$mydir/vol-async/src" -DCMAKE_C_COMPILER=$mydir/hdf5/install/bin/h5pcc
          make
          
      - name: Test h5bench SYNC Read & Write (NON)
        run: |
          cd build_sync
          ./h5bench_write /home/runner/work/h5bench/h5bench/h5bench_patterns/sample_config/sample_cc1d_small.cfg file.h5
          ./h5bench_read /home/runner/work/h5bench/h5bench/h5bench_patterns/sample_config/sample_cc1d_small.cfg file.h5
          
      - name: Test h5bench ASYNC Read & Write (NON)
        run: |
          cd build_async
          ./h5bench_write /home/runner/work/h5bench/h5bench/h5bench_patterns/sample_config/sample_cc1d_small.cfg file.h5
          ./h5bench_read /home/runner/work/h5bench/h5bench/h5bench_patterns/sample_config/sample_cc1d_small.cfg file.h5
          
      - name: Test h5bench ASYNC Read & Write (IMP)
        run: |
          cd build_async
          ./h5bench_write /home/runner/work/h5bench/h5bench/h5bench_patterns/sample_config/sample_cc1d_small_IMP.cfg file_IMP.h5
          ./h5bench_read /home/runner/work/h5bench/h5bench/h5bench_patterns/sample_config/sample_cc1d_small_IMP.cfg file_IMP.h5
          
      - name: Test h5bench ASYNC Read & Write (EXP)
        run: |
          cd build_async
          ./h5bench_write /home/runner/work/h5bench/h5bench/h5bench_patterns/sample_config/sample_cc1d_small_EXP.cfg file_EXP.h5
          ./h5bench_read /home/runner/work/h5bench/h5bench/h5bench_patterns/sample_config/sample_cc1d_small_EXP.cfg file_EXP.h5
